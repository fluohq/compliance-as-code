name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  check:
    name: Nix Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v24
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            accept-flake-config = true

      - name: Check Nix formatting
        run: nix run nixpkgs#nixpkgs-fmt -- --check .

      - name: Build sample generators
        run: |
          cd frameworks/generators
          nix build .#java-gdpr --no-link
          nix build .#ts-gdpr --no-link
          nix build .#py-gdpr --no-link
          nix build .#go-gdpr --no-link
          echo "âœ“ All sample generators built successfully"

  build-generators:
    name: Build All Generators
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [java, typescript, python, go]
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v24
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            accept-flake-config = true

      - name: Setup Cachix
        uses: cachix/cachix-action@v13
        with:
          name: fluohq
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Build all ${{ matrix.language }} generators
        run: |
          cd frameworks/generators
          nix build .#all-${{ matrix.language }}

      - name: List generated files
        run: ls -lah frameworks/generators/result/

  build-examples:
    name: Build Examples
    runs-on: ubuntu-latest
    needs: build-generators
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v24
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            accept-flake-config = true

      - name: Setup Cachix
        uses: cachix/cachix-action@v13
        with:
          name: fluohq
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Build all examples
        run: |
          cd examples
          # Will implement when examples are ready
          echo "Examples build coming soon"

  format-check:
    name: Check Nix Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v24
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            accept-flake-config = true

      - name: Check Nix formatting
        run: nix run nixpkgs#nixpkgs-fmt -- --check .
